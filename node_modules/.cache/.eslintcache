[{"/Users/punit/Desktop/reeco/src/index.js":"1","/Users/punit/Desktop/reeco/src/reportWebVitals.js":"2","/Users/punit/Desktop/reeco/src/redux/store.js":"3","/Users/punit/Desktop/reeco/src/App.js":"4","/Users/punit/Desktop/reeco/src/components/Navbar.js":"5","/Users/punit/Desktop/reeco/src/components/OrderInfoContainer.js":"6","/Users/punit/Desktop/reeco/src/redux/slice/OrdersSlice.js":"7","/Users/punit/Desktop/reeco/src/components/Header.js":"8","/Users/punit/Desktop/reeco/src/components/OrderListData.js":"9","/Users/punit/Desktop/reeco/src/components/OrderHeaderData.js":"10","/Users/punit/Desktop/reeco/src/components/Button.js":"11","/Users/punit/Desktop/reeco/src/components/OrderListTopContainer.js":"12","/Users/punit/Desktop/reeco/src/components/SearchBox.js":"13","/Users/punit/Desktop/reeco/src/components/OrderTableDataContainer.js":"14","/Users/punit/Desktop/reeco/src/components/Popup.js":"15"},{"size":778,"mtime":1697518407926,"results":"16","hashOfConfig":"17"},{"size":362,"mtime":1697518407927,"results":"18","hashOfConfig":"17"},{"size":191,"mtime":1697518407927,"results":"19","hashOfConfig":"17"},{"size":751,"mtime":1697518407923,"results":"20","hashOfConfig":"17"},{"size":1884,"mtime":1697518407924,"results":"21","hashOfConfig":"17"},{"size":793,"mtime":1697518407925,"results":"22","hashOfConfig":"17"},{"size":1057,"mtime":1697726026469,"results":"23","hashOfConfig":"17"},{"size":1911,"mtime":1697518407924,"results":"24","hashOfConfig":"17"},{"size":3748,"mtime":1697518407925,"results":"25","hashOfConfig":"17"},{"size":2022,"mtime":1697518407925,"results":"26","hashOfConfig":"17"},{"size":197,"mtime":1697518407924,"results":"27","hashOfConfig":"17"},{"size":1304,"mtime":1697518407925,"results":"28","hashOfConfig":"17"},{"size":2136,"mtime":1697518407926,"results":"29","hashOfConfig":"17"},{"size":10521,"mtime":1697518407925,"results":"30","hashOfConfig":"17"},{"size":551,"mtime":1697518407926,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1098exk",{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72"},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76"},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80"},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/punit/Desktop/reeco/src/index.js",[],[],"/Users/punit/Desktop/reeco/src/reportWebVitals.js",[],[],"/Users/punit/Desktop/reeco/src/redux/store.js",[],[],"/Users/punit/Desktop/reeco/src/App.js",["84","85","86"],[],"import Container from \"react-bootstrap/Container\";\n\nimport Navigation from \"./components/Navbar\";\nimport Header from \"./components/Header\";\nimport OrderInfoContainer from \"./components/OrderInfoContainer\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useEffect, useState, React, useRef } from \"react\";\nimport { fetchOrders } from \"./redux/slice/OrdersSlice\";\n\nconst ContainerExample = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchOrders());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Container fluid style={{ backgroundColor: \"#f4f4f4\", padding: 0 }}>\n        <Navigation />\n        <Header />\n        <OrderInfoContainer />\n      </Container>\n    </>\n  );\n};\n\nexport default ContainerExample;\n","/Users/punit/Desktop/reeco/src/components/Navbar.js",[],[],"/Users/punit/Desktop/reeco/src/components/OrderInfoContainer.js",["87"],[],"import Row from \"react-bootstrap/Row\";\n// import Col from \"react-bootstrap/Col\";\nimport \"../styles/Orderinfo.css\";\nimport { Container } from \"react-bootstrap\";\nimport OrderHeaderData from \"./OrderHeaderData\";\nimport OrderListData from \"./OrderListData\";\n// import { fetchOrders } from \"../redux/slice/OrdersSlice\";\nimport { useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\n\nfunction OrderInfoContainer() {\n  const state = useSelector((state) => state);\n\n  return (\n    <>\n      {!state.orders.isLoading ? (\n        <Container>\n          <Row>\n            <OrderHeaderData></OrderHeaderData>\n          </Row>\n          <Row>\n            <OrderListData></OrderListData>\n          </Row>\n        </Container>\n      ) : null}\n    </>\n  );\n}\n\nexport default OrderInfoContainer;\n","/Users/punit/Desktop/reeco/src/redux/slice/OrdersSlice.js",[],[],"/Users/punit/Desktop/reeco/src/components/Header.js",["88"],[],"import { Col, NavDropdown, Row } from \"react-bootstrap\";\nimport Container from \"react-bootstrap/Container\";\nimport Button from \"./Button\";\nimport '../styles/Header.css'\n\n// Styles for the Back Button\nconst BackButtonStyles = {\n  padding: \"1.5% 8%\",\n  border: \" 2px solid green\",\n  backgroundColor: \"white\",\n  color: \"green\",\n  fontSize: \"14px\",\n  fontWeight: \"bold\",\n  borderRadius: \"20px\",\n};\n\n// Styles for the Approve Button\nconst ApproveButtonStyles = {\n  padding: \"1.5% 8%\",\n  border: \" 2px solid white\",\n  backgroundColor: \"green\",\n  color: \"white\",\n  fontSize: \"14px\",\n  fontWeight: \"bold\",\n  borderRadius: \"20px\",\n};\n\nfunction Header() {\n  // Click event handler for the Back Button\n  const handleBack = () => {\n    console.log(\"Button was clicked!\");\n  };\n\n  // Click event handler for the Approve Button\n  const handleApprove = () => {\n    console.log(\"Button was clicked!\");\n  };\n\n  return (\n    <>\n      {/* Header div with background color and shadow */}\n      <div style={{ backgroundColor: \"white\", boxShadow: '0px 0px 6px 0px rgba(0,0,0,0.52)' }}>\n        <Container style={{ padding: '20px 0' }}>\n          <Row>\n            <Col>Order {`>`} Order 3245674</Col>\n          </Row>\n          <Row>\n            <Col>\n              <span className=\"order-num\">Order 3245674</span>\n            </Col>\n            <Col className=\"btn-grp-container\">\n              {/* Back Button with the \"handleBack\" click event handler */}\n              <Button onClick={handleBack} style={BackButtonStyles}>\n                Back\n              </Button>\n              {/* Approve Button with the \"handleApprove\" click event handler */}\n              <Button\n                onClick={handleApprove}\n                style={ApproveButtonStyles}\n              >\n                Approve\n              </Button>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    </>\n  );\n}\n\nexport default Header;\n","/Users/punit/Desktop/reeco/src/components/OrderListData.js",["89","90"],[],"import Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport { Container } from \"react-bootstrap\";\nimport SearchBox from \"./SearchBox\";\nimport Button from \"./Button\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPrint } from \"@fortawesome/free-solid-svg-icons\";\nimport OrderListTopContainer from \"./OrderListTopContainer\";\nimport OrderTableDataContainer from \"./OrderTableDataContainer\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useState, useCallback, useEffect } from \"react\";\n// import { data } from \"../Data\";\n\n// Styles for the \"Add Item\" button\nconst ButtonStyles = {\n  padding: \"5% 8%\",\n  width: \"10rem\",\n  border: \" 2px solid green\",\n  backgroundColor: \"white\",\n  color: \"green\",\n  fontSize: \"14px\",\n  fontWeight: \"bold\",\n  borderRadius: \"20px\",\n  marginRight: \"2rem\",\n};\n\n// Styles for a container\nconst ContainerStyles = {\n  display: \"flex\",\n  justifyContent: \"end\",\n  alignItems: \"baseline\",\n};\n\nfunction OrderListData() {\n  // Using useSelector to get order data from Redux state\n  const state = useSelector((state) =>\n    state.orders.data[0] ? state.orders.data[0].order : []\n  );\n\n  // State to manage the list of orders\n  const [ordersList, setOrderList] = useState([]);\n\n  // Callback function to update order status\n  const handleSetOrder = useCallback(\n    (newValue, value) => {\n      let newData = updateObjectById(ordersList, newValue.id, {\n        status: value,\n      });\n\n      setOrderList(newData);\n    },\n    [ordersList]\n  );\n\n  // Callback function to handle search results\n  const handleSearchResults = useCallback(\n    (newValue) => {\n      let newData = newValue;\n\n      setOrderList(newData);\n    },\n    [ordersList]\n  );\n\n  // Effect to set the initial order list\n  useEffect(() => {\n    setOrderList(state);\n  }, [state]);\n\n  // Function to update an object in an array by ID\n  const updateObjectById = (arr, idToFind, newValues) => {\n    return arr.map((obj) => {\n      if (obj.id === idToFind) {\n        // Update the object's properties with newValues\n        return { ...obj, ...newValues };\n      }\n      return obj;\n    });\n  };\n\n  // Function to update an edited order in the list\n  const updateEditedOrder = (updatedOrder) => {\n    const index = ordersList.findIndex((obj) => obj.id === updatedOrder.id);\n\n    if (index !== -1) {\n      const newArray = [\n        ...ordersList.slice(0, index),\n        { ...updatedOrder },\n        ...ordersList.slice(index + 1),\n      ];\n\n      setOrderList(newArray);\n    }\n  };\n\n  return (\n    <>\n      {/* Container for the header */}\n      <Container className=\"container-header\">\n        <Row>\n          <Col>\n            {/* SearchBox component to filter orders */}\n            <SearchBox\n              setOrderList={handleSearchResults}\n              data={state}\n            ></SearchBox>\n          </Col>\n          <Col style={ContainerStyles}>\n            <span>\n              {/* \"Add Item\" Button */}\n              <Button style={ButtonStyles}>Add Item</Button>\n            </span>\n            <span>\n              {/* FontAwesome icon for printing */}\n              <FontAwesomeIcon\n                size=\"xl\"\n                icon={faPrint}\n                style={{ color: \"#307838\" }}\n              />\n            </span>\n          </Col>\n        </Row>\n\n        {/* OrderListTopContainer component */}\n        <OrderListTopContainer data={ordersList}></OrderListTopContainer>\n\n        {/* OrderTableDataContainer component */}\n        <OrderTableDataContainer\n          data={ordersList}\n          setOrderList={handleSetOrder}\n          updateEditedOrder={updateEditedOrder}\n        ></OrderTableDataContainer>\n      </Container>\n    </>\n  );\n}\n\nexport default OrderListData;\n","/Users/punit/Desktop/reeco/src/components/OrderHeaderData.js",[],[],"/Users/punit/Desktop/reeco/src/components/Button.js",[],[],"/Users/punit/Desktop/reeco/src/components/OrderListTopContainer.js",["91","92","93","94","95","96"],[],"import Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport { Container } from \"react-bootstrap\";\nimport SearchBox from \"./SearchBox\";\nimport Button from \"./Button\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPrint } from \"@fortawesome/free-solid-svg-icons\";\n\nconst ButtonStyles = {\n  padding: \"5% 8%\",\n  width: \"10rem\",\n  border: \" 2px solid green\",\n  backgroundColor: \"white\",\n  color: \"green\",\n  fontSize: \"14px\",\n  fontWeight: \"bold\",\n  borderRadius: \"20px\",\n  marginRight: \"2rem\",\n};\n\nfunction OrderListTopContainer() {\n  return (\n    <>\n      <Row className=\"order-details-container\">\n        <Col xs={3} md={3}>\n          <span className=\"list-header\">Product Name</span>\n        </Col>\n        <Col xs={1} md={2}>\n          <span className=\"list-header\">Brand</span>\n        </Col>\n        <Col xs={1} md={1}>\n          <span className=\"list-header\">Price</span>\n        </Col>\n        <Col xs={2} md={2}>\n          <span className=\"list-header\">Quantity</span>\n        </Col>\n        <Col xs={1} md={1}>\n          <span className=\"list-header\">Total</span>\n        </Col>\n        <Col xs={3} md={3}>\n          <span className=\"list-header\">Status</span>\n        </Col>\n      </Row>\n    </>\n  );\n}\n\nexport default OrderListTopContainer;\n","/Users/punit/Desktop/reeco/src/components/SearchBox.js",["97","98"],[],"import { React, useEffect, useState } from \"react\";\nimport \"../styles/searchbox.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSearch } from \"@fortawesome/free-solid-svg-icons\";\n\nfunction SearchBox(props) {\n  // State to manage the search input value\n  const [searchVal, setSearchVal] = useState(\"\");\n\n  // Create a shallow copy of the data passed in props\n  const copiedData = [...props.data];\n\n  // Handle input changes in the search input field\n  const handleInput = (e) => {\n    setSearchVal(e.target.value);\n    handleSearch(e.target.value);\n  };\n\n  // Clear the search input field\n  const handleClearBtn = () => {\n    setSearchVal(\"\");\n  };\n\n  // Handle the search operation\n  const handleSearch = (value) => {\n    // Filter the data based on the search query\n    const matchingObjects = filterObjectsByKeywords(copiedData, value);\n\n    // Update the order list with matching objects\n    if (matchingObjects.length > 0) {\n      // props.setOrderList(matchingObjects);\n    }\n  };\n\n  // Function to filter objects based on search keywords\n  function filterObjectsByKeywords(orders, searchQuery) {\n    // Shallow copy of the \"orders\" array\n    const copiedOrders = [...orders];\n\n    // Split searchQuery into keywords\n    const keywords = searchQuery.toLowerCase().split(\" \");\n\n    // Use filter method to find objects containing any of the keywords\n    const filteredOrders = copiedOrders.filter((order) => {\n      const orderName = order.name.toLowerCase();\n      return keywords.some((keyword) => orderName.includes(keyword));\n    });\n\n    return filteredOrders;\n  }\n\n  return (\n    <div className=\"container-searchbox\">\n      <div className=\"input-wrap\">\n        <label htmlFor=\"product-search\" id=\"input-label\">\n          Product Search\n        </label>\n        <input\n          onChange={handleInput}\n          value={searchVal}\n          type=\"text\"\n          name=\"product-search\"\n          id=\"product-search\"\n          placeholder=\"Search....\"\n        />\n\n        <FontAwesomeIcon icon={faSearch} style={{ color: \"#b0b0b0\" }} />\n      </div>\n    </div>\n  );\n}\n\nexport default SearchBox;\n","/Users/punit/Desktop/reeco/src/components/OrderTableDataContainer.js",["99"],[],"import Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\n// import { data } from \"../Data\";\nimport { Badge, Form } from \"react-bootstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCheck, faXmark } from \"@fortawesome/free-solid-svg-icons\";\nimport { useEffect, useState } from \"react\";\nimport Popup from \"./Popup.js\";\nimport Button from \"./Button\";\n\n// Styles for the \"Approve\" button\nconst ApproveButtonStyles = {\n  padding: \"1.8% 8%\",\n  border: \" 2px solid white\",\n  backgroundColor: \"green\",\n  color: \"white\",\n  fontSize: \"14px\",\n  fontWeight: \"bold\",\n  borderRadius: \"20px\",\n};\n\n// Styles for the edit popup heading\nconst editPopupHeadingStyles = {\n  marginBottom: \"2px\",\n  fontSize: \"14px\",\n  fontWeight: \"600\",\n  color: \" #4d4d4d\",\n  fontFamily: \"sans-serif\",\n};\n\n// Styles for the \"Back\" button\nconst BackButtonStyles = {\n  padding: \"1.5% 8%\",\n  border: \" 2px solid green\",\n  backgroundColor: \"white\",\n  color: \"green\",\n  fontSize: \"14px\",\n  fontWeight: \"bold\",\n  borderRadius: \"20px\",\n};\n\nfunction OrderTableDataContainer(dataProps) {\n  // State to manage the list of orders\n  const [ordersList, updateOrderList] = useState(dataProps.data);\n\n  // State to control the display of the \"Missing Product\" popup\n  const [taskShow, setShow] = useState(false);\n\n  // State to control the display of the edit popup\n  const [editShow, setEdit] = useState(false);\n\n  // State to store the current order being edited\n  const [currentOrder, setCurrentorder] = useState(\"\");\n\n  // useEffect to update the order list when dataProps.data changes\n  useEffect(() => {\n    updateOrderList(dataProps.data);\n  }, [dataProps.data]);\n\n  // Function to display a badge based on the order status\n  const handleStatus = (param) => {\n    switch (param) {\n      case \"approved\":\n        return (\n          <Badge bsPrefix=\"badge-style\" bg=\"success\">\n            Approved\n          </Badge>\n        );\n      case \"urgent\":\n        return (\n          <Badge bsPrefix=\"badge-style\" bg=\"danger\">\n            Missing-Urgent\n          </Badge>\n        );\n      case \"missing\":\n        return (\n          <Badge bsPrefix=\"badge-style\" bg=\"warning\">\n            Missing\n          </Badge>\n        );\n      default:\n        return \"\";\n    }\n  };\n\n  // Function to handle missing product status\n  const handleMissingProduct = (data, value) => {\n    dataProps.setOrderList(data, value);\n    setShow(false);\n  };\n\n  // Function to handle updates in the edit popup\n  const handleUpdate = (value) => {\n    if (value === \"update\") dataProps.updateEditedOrder(currentOrder);\n    setEdit(false);\n  };\n\n  return (\n    <>\n      {/* Popup for \"Missing Product\" */}\n      <Popup\n        show={taskShow}\n        handleClose={() => setShow(false)}\n        handleShow={() => setShow(true)}\n        modalTitle=\"Missing Product\"\n      >\n        <div style={{ ...editPopupHeadingStyles, ...{ marginBottom: \"5%\" } }}>\n          Is {currentOrder.name}{\" \"}\n          <strong style={{ color: \"#df3131\" }}>urgent</strong>?\n        </div>\n        <Button\n          onClick={(event) => handleMissingProduct(currentOrder, \"missing\")}\n          style={BackButtonStyles}\n        >\n          No\n        </Button>\n        <Button\n          onClick={(event) => handleMissingProduct(currentOrder, \"urgent\")}\n          style={{ ...ApproveButtonStyles, ...{ float: \"right\" } }}\n        >\n          Yes\n        </Button>\n      </Popup>\n\n      {/* Popup for editing an order */}\n      <Popup\n        show={editShow}\n        handleClose={() => setEdit(false)}\n        handleShow={() => setEdit(true)}\n      >\n        <div style={editPopupHeadingStyles}>{currentOrder.name}</div>\n        <div\n          style={{\n            ...editPopupHeadingStyles,\n            ...{ fontSize: \"12px\", color: \"grey\" },\n          }}\n        >\n          {currentOrder.brand}\n        </div>\n        {/* Form controls for editing */}\n        <Row style={{ margin: \"10px 0px\" }}>\n          <Col xs={1} md={3}>\n            <img style={{ width: \"100%\" }} src={currentOrder.img}></img>\n          </Col>\n          <Col xs={1} md={3}>\n            <label className=\"edit-popup-labels\">Price</label>\n            <label className=\"edit-popup-labels\">Quantity</label>\n            <label className=\"edit-popup-labels\">Total</label>\n          </Col>\n          <Col xs={1} md={6}>\n            <Form.Control\n              bsPrefix=\"edit-popup-input\"\n              size=\"sm\"\n              type=\"text\"\n              placeholder=\"Small text\"\n              onChange={({ target }) =>\n                setCurrentorder((state) => ({ ...state, price: target.value }))\n              }\n              value={currentOrder.price}\n            />\n            <Form.Control\n              bsPrefix=\"edit-popup-input\"\n              size=\"sm\"\n              type=\"text\"\n              placeholder=\"Small text\"\n              onChange={({ target }) =>\n                setCurrentorder((state) => ({\n                  ...state,\n                  quantity: target.value,\n                }))\n              }\n              value={currentOrder.quantity}\n            />\n            <Form.Control\n              bsPrefix=\"edit-popup-input\"\n              size=\"sm\"\n              type=\"text\"\n              placeholder=\"Small text\"\n              value={currentOrder.total}\n            />\n          </Col>\n        </Row>\n        <Row style={{ margin: \"10px 0px\" }}>\n          <Col>\n            <span className=\"edit-reasons\">Missing product</span>\n            <span className=\"edit-reasons\">Quantity is not same</span>\n            <span className=\"edit-reasons\">Price is not same</span>\n          </Col>\n        </Row>\n        <Row style={{ margin: \"10px 0px\" }}>\n          <Col>\n            <Button\n              onClick={(event) => handleUpdate(\"cancel\")}\n              style={BackButtonStyles}\n            >\n              Cancel\n            </Button>\n            <Button\n              onClick={(event) => handleUpdate(\"update\")}\n              style={{ ...ApproveButtonStyles, ...{ float: \"right\" } }}\n            >\n              Send\n            </Button>\n          </Col>\n        </Row>\n      </Popup>\n\n      {/* Mapping through and rendering order items */}\n      {ordersList &&\n        ordersList.map((value, id) => {\n          return (\n            <Row\n              key={id}\n              style={{\n                padding: \"20px 4px\",\n                borderBottom: \"1px solid #e7e7e7\",\n                color: \" #6d6d6d\",\n                fontSize: \"14px\",\n                fontWeight: 600,\n                fontFamily: \"Poppins\",\n              }}\n            >\n              <Col\n                xs={3}\n                md={3}\n                style={{ display: \"flex\", alignItems: \"center\" }}\n              >\n                <Row>\n                  <Col\n                    xs={2}\n                    md={2}\n                    style={{ display: \"flex\", alignItems: \"center\" }}\n                  >\n                    <img\n                      style={{ width: \"40px\", paddingRight: \"4%\" }}\n                      src={value.img}\n                      alt={value.name}\n                    ></img>\n                  </Col>\n                  <Col xs={10} md={10}>\n                    <span>{value.name}</span>\n                  </Col>\n                </Row>\n              </Col>\n              <Col\n                xs={1}\n                md={2}\n                style={{ display: \"flex\", alignItems: \"center\" }}\n              >\n                <span>{value.brand}</span>\n              </Col>\n              <Col\n                xs={1}\n                md={1}\n                style={{ display: \"flex\", alignItems: \"center\" }}\n              >\n                <span>{value.price}</span>\n              </Col>\n              <Col\n                xs={2}\n                md={2}\n                style={{ display: \"flex\", alignItems: \"center\" }}\n              >\n                <span>{value.quantity}</span>\n              </Col>\n              <Col\n                xs={1}\n                md={1}\n                style={{ display: \"flex\", alignItems: \"center\" }}\n              >\n                <span>{value.total}</span>\n              </Col>\n              <Col xs={3} md={3} style={{}}>\n                <Row>\n                  <Col xs={1} md={6}>\n                    {handleStatus(value.status)}\n                  </Col>\n                  <Col xs={1} md={3}>\n                    <FontAwesomeIcon\n                      icon={faCheck}\n                      size=\"lg\"\n                      style={\n                        value.status === \"approved\"\n                          ? {\n                              color: \"green\",\n                              padding: \" 0 10px\",\n                              cursor: \"pointer\",\n                            }\n                          : {\n                              color: \"grey\",\n                              padding: \" 0 10px\",\n                              cursor: \"pointer\",\n                            }\n                      }\n                      onClick={() => {\n                        handleMissingProduct(value, \"approved\");\n                      }}\n                    />\n                    <FontAwesomeIcon\n                      icon={faXmark}\n                      size=\"lg\"\n                      style={\n                        value.status === \"missing\"\n                          ? {\n                              color: \"red\",\n                              cursor: \"pointer\",\n                            }\n                          : value.status === \"urgent\"\n                          ? {\n                              color: \"red\",\n                              cursor: \"pointer\",\n                            }\n                          : {\n                              color: \"grey\",\n                              cursor: \"pointer\",\n                            }\n                      }\n                      onClick={() => {\n                        setShow(true);\n                        setCurrentorder(value);\n                      }}\n                    />\n                  </Col>\n                  <Col xs={1} md={3}>\n                    <span\n                      onClick={() => {\n                        setEdit(true);\n                        setCurrentorder(value);\n                      }}\n                    >\n                      Edit\n                    </span>\n                  </Col>\n                </Row>\n              </Col>\n            </Row>\n          );\n        })}\n    </>\n  );\n}\n\nexport default OrderTableDataContainer;\n","/Users/punit/Desktop/reeco/src/components/Popup.js",[],[],{"ruleId":"100","severity":1,"message":"101","line":6,"column":23,"nodeType":"102","messageId":"103","endLine":6,"endColumn":34},{"ruleId":"100","severity":1,"message":"104","line":7,"column":21,"nodeType":"102","messageId":"103","endLine":7,"endColumn":29},{"ruleId":"100","severity":1,"message":"105","line":7,"column":38,"nodeType":"102","messageId":"103","endLine":7,"endColumn":44},{"ruleId":"100","severity":1,"message":"106","line":8,"column":10,"nodeType":"102","messageId":"103","endLine":8,"endColumn":19},{"ruleId":"100","severity":1,"message":"107","line":1,"column":15,"nodeType":"102","messageId":"103","endLine":1,"endColumn":26},{"ruleId":"100","severity":1,"message":"108","line":10,"column":23,"nodeType":"102","messageId":"103","endLine":10,"endColumn":34},{"ruleId":"109","severity":1,"message":"110","line":62,"column":5,"nodeType":"111","endLine":62,"endColumn":17,"suggestions":"112"},{"ruleId":"100","severity":1,"message":"113","line":3,"column":10,"nodeType":"102","messageId":"103","endLine":3,"endColumn":19},{"ruleId":"100","severity":1,"message":"114","line":4,"column":8,"nodeType":"102","messageId":"103","endLine":4,"endColumn":17},{"ruleId":"100","severity":1,"message":"115","line":5,"column":8,"nodeType":"102","messageId":"103","endLine":5,"endColumn":14},{"ruleId":"100","severity":1,"message":"116","line":6,"column":10,"nodeType":"102","messageId":"103","endLine":6,"endColumn":25},{"ruleId":"100","severity":1,"message":"117","line":7,"column":10,"nodeType":"102","messageId":"103","endLine":7,"endColumn":17},{"ruleId":"100","severity":1,"message":"118","line":9,"column":7,"nodeType":"102","messageId":"103","endLine":9,"endColumn":19},{"ruleId":"100","severity":1,"message":"106","line":1,"column":17,"nodeType":"102","messageId":"103","endLine":1,"endColumn":26},{"ruleId":"100","severity":1,"message":"119","line":20,"column":9,"nodeType":"102","messageId":"103","endLine":20,"endColumn":23},{"ruleId":"120","severity":1,"message":"121","line":143,"column":13,"nodeType":"122","endLine":143,"endColumn":67},"no-unused-vars","'useSelector' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'useRef' is defined but never used.","'useEffect' is defined but never used.","'NavDropdown' is defined but never used.","'useDispatch' is defined but never used.","react-hooks/exhaustive-deps","React Hook useCallback has an unnecessary dependency: 'ordersList'. Either exclude it or remove the dependency array.","ArrayExpression",["123"],"'Container' is defined but never used.","'SearchBox' is defined but never used.","'Button' is defined but never used.","'FontAwesomeIcon' is defined but never used.","'faPrint' is defined but never used.","'ButtonStyles' is assigned a value but never used.","'handleClearBtn' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",{"desc":"124","fix":"125"},"Update the dependencies array to be: []",{"range":"126","text":"127"},[1717,1729],"[]"]