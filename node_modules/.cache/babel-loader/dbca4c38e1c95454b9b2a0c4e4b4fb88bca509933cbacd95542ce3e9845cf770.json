{"ast":null,"code":"var _jsxFileName = \"/Users/punit/Desktop/aiwizardry/reeco/src/components/SearchBox.js\",\n  _s = $RefreshSig$();\nimport { React, useEffect, useState } from \"react\";\nimport \"../styles/searchbox.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSearch } from \"@fortawesome/free-solid-svg-icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SearchBox(props) {\n  _s();\n  // State to manage the search input value\n  const [searchVal, setSearchVal] = useState(\"\");\n\n  // Create a shallow copy of the data passed in props\n  const copiedData = [...props.data];\n\n  // Handle input changes in the search input field\n  const handleInput = e => {\n    setSearchVal(e.target.value);\n    handleSearch(e.target.value);\n  };\n\n  // Clear the search input field\n  const handleClearBtn = () => {\n    setSearchVal(\"\");\n  };\n\n  // Handle the search operation\n  const handleSearch = value => {\n    // Filter the data based on the search query\n    const matchingObjects = filterObjectsByKeywords(copiedData, value);\n\n    // Update the order list with matching objects\n    if (matchingObjects.length > 0) {\n      // props.setOrderList(matchingObjects);\n    }\n  };\n\n  // Function to filter objects based on search keywords\n  function filterObjectsByKeywords(orders, searchQuery) {\n    // Shallow copy of the \"orders\" array\n    const copiedOrders = [...orders];\n\n    // Split searchQuery into keywords\n    const keywords = searchQuery.toLowerCase().split(\" \");\n\n    // Use filter method to find objects containing any of the keywords\n    const filteredOrders = copiedOrders.filter(order => {\n      const orderName = order.name.toLowerCase();\n      return keywords.some(keyword => orderName.includes(keyword));\n    });\n    return filteredOrders;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-searchbox\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-wrap\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"product-search\",\n        id: \"input-label\",\n        children: \"Product Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: handleInput,\n        value: searchVal,\n        type: \"text\",\n        name: \"product-search\",\n        id: \"product-search\",\n        placeholder: \"Search....\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: faSearch,\n        style: {\n          color: \"#b0b0b0\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n_s(SearchBox, \"lwwxafWsE1kH4+OPJPkP2G7UYIE=\");\n_c = SearchBox;\nexport default SearchBox;\nvar _c;\n$RefreshReg$(_c, \"SearchBox\");","map":{"version":3,"names":["React","useEffect","useState","FontAwesomeIcon","faSearch","jsxDEV","_jsxDEV","SearchBox","props","_s","searchVal","setSearchVal","copiedData","data","handleInput","e","target","value","handleSearch","handleClearBtn","matchingObjects","filterObjectsByKeywords","length","orders","searchQuery","copiedOrders","keywords","toLowerCase","split","filteredOrders","filter","order","orderName","name","some","keyword","includes","className","children","htmlFor","id","fileName","_jsxFileName","lineNumber","columnNumber","onChange","type","placeholder","icon","style","color","_c","$RefreshReg$"],"sources":["/Users/punit/Desktop/aiwizardry/reeco/src/components/SearchBox.js"],"sourcesContent":["import { React, useEffect, useState } from \"react\";\nimport \"../styles/searchbox.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSearch } from \"@fortawesome/free-solid-svg-icons\";\n\nfunction SearchBox(props) {\n  // State to manage the search input value\n  const [searchVal, setSearchVal] = useState(\"\");\n\n  // Create a shallow copy of the data passed in props\n  const copiedData = [...props.data];\n\n  // Handle input changes in the search input field\n  const handleInput = (e) => {\n    setSearchVal(e.target.value);\n    handleSearch(e.target.value);\n  };\n\n  // Clear the search input field\n  const handleClearBtn = () => {\n    setSearchVal(\"\");\n  };\n\n  // Handle the search operation\n  const handleSearch = (value) => {\n    // Filter the data based on the search query\n    const matchingObjects = filterObjectsByKeywords(copiedData, value);\n\n    // Update the order list with matching objects\n    if (matchingObjects.length > 0) {\n      // props.setOrderList(matchingObjects);\n    }\n  };\n\n  // Function to filter objects based on search keywords\n  function filterObjectsByKeywords(orders, searchQuery) {\n    // Shallow copy of the \"orders\" array\n    const copiedOrders = [...orders];\n\n    // Split searchQuery into keywords\n    const keywords = searchQuery.toLowerCase().split(\" \");\n\n    // Use filter method to find objects containing any of the keywords\n    const filteredOrders = copiedOrders.filter((order) => {\n      const orderName = order.name.toLowerCase();\n      return keywords.some((keyword) => orderName.includes(keyword));\n    });\n\n    return filteredOrders;\n  }\n\n  return (\n    <div className=\"container-searchbox\">\n      <div className=\"input-wrap\">\n        <label htmlFor=\"product-search\" id=\"input-label\">\n          Product Search\n        </label>\n        <input\n          onChange={handleInput}\n          value={searchVal}\n          type=\"text\"\n          name=\"product-search\"\n          id=\"product-search\"\n          placeholder=\"Search....\"\n        />\n\n        <FontAwesomeIcon icon={faSearch} style={{ color: \"#b0b0b0\" }} />\n      </div>\n    </div>\n  );\n}\n\nexport default SearchBox;\n"],"mappings":";;AAAA,SAASA,KAAK,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAO,yBAAyB;AAChC,SAASC,eAAe,QAAQ,gCAAgC;AAChE,SAASC,QAAQ,QAAQ,mCAAmC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7D,SAASC,SAASA,CAACC,KAAK,EAAE;EAAAC,EAAA;EACxB;EACA,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;;EAE9C;EACA,MAAMU,UAAU,GAAG,CAAC,GAAGJ,KAAK,CAACK,IAAI,CAAC;;EAElC;EACA,MAAMC,WAAW,GAAIC,CAAC,IAAK;IACzBJ,YAAY,CAACI,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;IAC5BC,YAAY,CAACH,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAC9B,CAAC;;EAED;EACA,MAAME,cAAc,GAAGA,CAAA,KAAM;IAC3BR,YAAY,CAAC,EAAE,CAAC;EAClB,CAAC;;EAED;EACA,MAAMO,YAAY,GAAID,KAAK,IAAK;IAC9B;IACA,MAAMG,eAAe,GAAGC,uBAAuB,CAACT,UAAU,EAAEK,KAAK,CAAC;;IAElE;IACA,IAAIG,eAAe,CAACE,MAAM,GAAG,CAAC,EAAE;MAC9B;IAAA;EAEJ,CAAC;;EAED;EACA,SAASD,uBAAuBA,CAACE,MAAM,EAAEC,WAAW,EAAE;IACpD;IACA,MAAMC,YAAY,GAAG,CAAC,GAAGF,MAAM,CAAC;;IAEhC;IACA,MAAMG,QAAQ,GAAGF,WAAW,CAACG,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC;;IAErD;IACA,MAAMC,cAAc,GAAGJ,YAAY,CAACK,MAAM,CAAEC,KAAK,IAAK;MACpD,MAAMC,SAAS,GAAGD,KAAK,CAACE,IAAI,CAACN,WAAW,CAAC,CAAC;MAC1C,OAAOD,QAAQ,CAACQ,IAAI,CAAEC,OAAO,IAAKH,SAAS,CAACI,QAAQ,CAACD,OAAO,CAAC,CAAC;IAChE,CAAC,CAAC;IAEF,OAAON,cAAc;EACvB;EAEA,oBACEvB,OAAA;IAAK+B,SAAS,EAAC,qBAAqB;IAAAC,QAAA,eAClChC,OAAA;MAAK+B,SAAS,EAAC,YAAY;MAAAC,QAAA,gBACzBhC,OAAA;QAAOiC,OAAO,EAAC,gBAAgB;QAACC,EAAE,EAAC,aAAa;QAAAF,QAAA,EAAC;MAEjD;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACRtC,OAAA;QACEuC,QAAQ,EAAE/B,WAAY;QACtBG,KAAK,EAAEP,SAAU;QACjBoC,IAAI,EAAC,MAAM;QACXb,IAAI,EAAC,gBAAgB;QACrBO,EAAE,EAAC,gBAAgB;QACnBO,WAAW,EAAC;MAAY;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzB,CAAC,eAEFtC,OAAA,CAACH,eAAe;QAAC6C,IAAI,EAAE5C,QAAS;QAAC6C,KAAK,EAAE;UAAEC,KAAK,EAAE;QAAU;MAAE;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7D;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACnC,EAAA,CAjEQF,SAAS;AAAA4C,EAAA,GAAT5C,SAAS;AAmElB,eAAeA,SAAS;AAAC,IAAA4C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}