{"ast":null,"code":"var _jsxFileName = \"/Users/punit/Desktop/reeco/src/components/OrderListData.js\",\n  _s = $RefreshSig$();\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport { Container } from \"react-bootstrap\";\nimport SearchBox from \"./SearchBox\";\nimport Button from \"./Button\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPrint } from \"@fortawesome/free-solid-svg-icons\";\nimport OrderListTopContainer from \"./OrderListTopContainer\";\nimport OrderTableDataContainer from \"./OrderTableDataContainer\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useState, useCallback, useEffect } from \"react\";\n// import { data } from \"../Data\";\n\n// Styles for the \"Add Item\" button\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ButtonStyles = {\n  padding: \"5% 8%\",\n  width: \"10rem\",\n  border: \" 2px solid green\",\n  backgroundColor: \"white\",\n  color: \"green\",\n  fontSize: \"14px\",\n  fontWeight: \"bold\",\n  borderRadius: \"20px\",\n  marginRight: \"2rem\"\n};\n\n// Styles for a container\nconst ContainerStyles = {\n  display: \"flex\",\n  justifyContent: \"end\",\n  alignItems: \"baseline\"\n};\nfunction OrderListData() {\n  _s();\n  // Using useSelector to get order data from Redux state\n  const state = useSelector(state => state.orders.data[0] ? state.orders.data[0].order : []);\n\n  // State to manage the list of orders\n  const [ordersList, setOrderList] = useState([]);\n\n  // Callback function to update order status\n  const handleSetOrder = useCallback((newValue, value) => {\n    let newData = updateObjectById(ordersList, newValue.id, {\n      status: value\n    });\n    setOrderList(newData);\n  }, [ordersList]);\n\n  // Callback function to handle search results\n  const handleSearchResults = useCallback(newValue => {\n    let newData = newValue;\n    setOrderList(newData);\n  }, [ordersList]);\n\n  // Effect to set the initial order list\n  useEffect(() => {\n    setOrderList(state);\n  }, [state]);\n\n  // Function to update an object in an array by ID\n  const updateObjectById = (arr, idToFind, newValues) => {\n    return arr.map(obj => {\n      if (obj.id === idToFind) {\n        // Update the object's properties with newValues\n        return {\n          ...obj,\n          ...newValues\n        };\n      }\n      return obj;\n    });\n  };\n\n  // Function to update an edited order in the list\n  const updateEditedOrder = updatedOrder => {\n    const index = ordersList.findIndex(obj => obj.id === updatedOrder.id);\n    if (index !== -1) {\n      const newArray = [...ordersList.slice(0, index), {\n        ...updatedOrder\n      }, ...ordersList.slice(index + 1)];\n      setOrderList(newArray);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      className: \"container-header\",\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(SearchBox, {\n            setOrderList: handleSearchResults,\n            data: state\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          style: ContainerStyles,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              style: ButtonStyles,\n              children: \"Add Item\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              size: \"xl\",\n              icon: faPrint,\n              style: {\n                color: \"#307838\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(OrderListTopContainer, {\n        data: ordersList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(OrderTableDataContainer, {\n        data: ordersList,\n        setOrderList: handleSetOrder,\n        updateEditedOrder: updateEditedOrder\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(OrderListData, \"k2QrwQFC6lZPRZ+v1Tfy2LAynwg=\", false, function () {\n  return [useSelector];\n});\n_c = OrderListData;\nexport default OrderListData;\nvar _c;\n$RefreshReg$(_c, \"OrderListData\");","map":{"version":3,"names":["Row","Col","Container","SearchBox","Button","FontAwesomeIcon","faPrint","OrderListTopContainer","OrderTableDataContainer","useSelector","useDispatch","useState","useCallback","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","ButtonStyles","padding","width","border","backgroundColor","color","fontSize","fontWeight","borderRadius","marginRight","ContainerStyles","display","justifyContent","alignItems","OrderListData","_s","state","orders","data","order","ordersList","setOrderList","handleSetOrder","newValue","value","newData","updateObjectById","id","status","handleSearchResults","arr","idToFind","newValues","map","obj","updateEditedOrder","updatedOrder","index","findIndex","newArray","slice","children","className","fileName","_jsxFileName","lineNumber","columnNumber","style","size","icon","_c","$RefreshReg$"],"sources":["/Users/punit/Desktop/reeco/src/components/OrderListData.js"],"sourcesContent":["import Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport { Container } from \"react-bootstrap\";\nimport SearchBox from \"./SearchBox\";\nimport Button from \"./Button\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPrint } from \"@fortawesome/free-solid-svg-icons\";\nimport OrderListTopContainer from \"./OrderListTopContainer\";\nimport OrderTableDataContainer from \"./OrderTableDataContainer\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useState, useCallback, useEffect } from \"react\";\n// import { data } from \"../Data\";\n\n// Styles for the \"Add Item\" button\nconst ButtonStyles = {\n  padding: \"5% 8%\",\n  width: \"10rem\",\n  border: \" 2px solid green\",\n  backgroundColor: \"white\",\n  color: \"green\",\n  fontSize: \"14px\",\n  fontWeight: \"bold\",\n  borderRadius: \"20px\",\n  marginRight: \"2rem\",\n};\n\n// Styles for a container\nconst ContainerStyles = {\n  display: \"flex\",\n  justifyContent: \"end\",\n  alignItems: \"baseline\",\n};\n\nfunction OrderListData() {\n  // Using useSelector to get order data from Redux state\n  const state = useSelector((state) =>\n    state.orders.data[0] ? state.orders.data[0].order : []\n  );\n\n  // State to manage the list of orders\n  const [ordersList, setOrderList] = useState([]);\n\n  // Callback function to update order status\n  const handleSetOrder = useCallback(\n    (newValue, value) => {\n      let newData = updateObjectById(ordersList, newValue.id, {\n        status: value,\n      });\n\n      setOrderList(newData);\n    },\n    [ordersList]\n  );\n\n  // Callback function to handle search results\n  const handleSearchResults = useCallback(\n    (newValue) => {\n      let newData = newValue;\n\n      setOrderList(newData);\n    },\n    [ordersList]\n  );\n\n  // Effect to set the initial order list\n  useEffect(() => {\n    setOrderList(state);\n  }, [state]);\n\n  // Function to update an object in an array by ID\n  const updateObjectById = (arr, idToFind, newValues) => {\n    return arr.map((obj) => {\n      if (obj.id === idToFind) {\n        // Update the object's properties with newValues\n        return { ...obj, ...newValues };\n      }\n      return obj;\n    });\n  };\n\n  // Function to update an edited order in the list\n  const updateEditedOrder = (updatedOrder) => {\n    const index = ordersList.findIndex((obj) => obj.id === updatedOrder.id);\n\n    if (index !== -1) {\n      const newArray = [\n        ...ordersList.slice(0, index),\n        { ...updatedOrder },\n        ...ordersList.slice(index + 1),\n      ];\n\n      setOrderList(newArray);\n    }\n  };\n\n  return (\n    <>\n      {/* Container for the header */}\n      <Container className=\"container-header\">\n        <Row>\n          <Col>\n            {/* SearchBox component to filter orders */}\n            <SearchBox\n              setOrderList={handleSearchResults}\n              data={state}\n            ></SearchBox>\n          </Col>\n          <Col style={ContainerStyles}>\n            <span>\n              {/* \"Add Item\" Button */}\n              <Button style={ButtonStyles}>Add Item</Button>\n            </span>\n            <span>\n              {/* FontAwesome icon for printing */}\n              <FontAwesomeIcon\n                size=\"xl\"\n                icon={faPrint}\n                style={{ color: \"#307838\" }}\n              />\n            </span>\n          </Col>\n        </Row>\n\n        {/* OrderListTopContainer component */}\n        <OrderListTopContainer data={ordersList}></OrderListTopContainer>\n\n        {/* OrderTableDataContainer component */}\n        <OrderTableDataContainer\n          data={ordersList}\n          setOrderList={handleSetOrder}\n          updateEditedOrder={updateEditedOrder}\n        ></OrderTableDataContainer>\n      </Container>\n    </>\n  );\n}\n\nexport default OrderListData;\n"],"mappings":";;AAAA,OAAOA,GAAG,MAAM,qBAAqB;AACrC,OAAOC,GAAG,MAAM,qBAAqB;AACrC,SAASC,SAAS,QAAQ,iBAAiB;AAC3C,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,MAAM,MAAM,UAAU;AAC7B,SAASC,eAAe,QAAQ,gCAAgC;AAChE,SAASC,OAAO,QAAQ,mCAAmC;AAC3D,OAAOC,qBAAqB,MAAM,yBAAyB;AAC3D,OAAOC,uBAAuB,MAAM,2BAA2B;AAC/D,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,QAAQ,EAAEC,WAAW,EAAEC,SAAS,QAAQ,OAAO;AACxD;;AAEA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AACA,MAAMC,YAAY,GAAG;EACnBC,OAAO,EAAE,OAAO;EAChBC,KAAK,EAAE,OAAO;EACdC,MAAM,EAAE,kBAAkB;EAC1BC,eAAe,EAAE,OAAO;EACxBC,KAAK,EAAE,OAAO;EACdC,QAAQ,EAAE,MAAM;EAChBC,UAAU,EAAE,MAAM;EAClBC,YAAY,EAAE,MAAM;EACpBC,WAAW,EAAE;AACf,CAAC;;AAED;AACA,MAAMC,eAAe,GAAG;EACtBC,OAAO,EAAE,MAAM;EACfC,cAAc,EAAE,KAAK;EACrBC,UAAU,EAAE;AACd,CAAC;AAED,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACvB;EACA,MAAMC,KAAK,GAAGzB,WAAW,CAAEyB,KAAK,IAC9BA,KAAK,CAACC,MAAM,CAACC,IAAI,CAAC,CAAC,CAAC,GAAGF,KAAK,CAACC,MAAM,CAACC,IAAI,CAAC,CAAC,CAAC,CAACC,KAAK,GAAG,EACtD,CAAC;;EAED;EACA,MAAM,CAACC,UAAU,EAAEC,YAAY,CAAC,GAAG5B,QAAQ,CAAC,EAAE,CAAC;;EAE/C;EACA,MAAM6B,cAAc,GAAG5B,WAAW,CAChC,CAAC6B,QAAQ,EAAEC,KAAK,KAAK;IACnB,IAAIC,OAAO,GAAGC,gBAAgB,CAACN,UAAU,EAAEG,QAAQ,CAACI,EAAE,EAAE;MACtDC,MAAM,EAAEJ;IACV,CAAC,CAAC;IAEFH,YAAY,CAACI,OAAO,CAAC;EACvB,CAAC,EACD,CAACL,UAAU,CACb,CAAC;;EAED;EACA,MAAMS,mBAAmB,GAAGnC,WAAW,CACpC6B,QAAQ,IAAK;IACZ,IAAIE,OAAO,GAAGF,QAAQ;IAEtBF,YAAY,CAACI,OAAO,CAAC;EACvB,CAAC,EACD,CAACL,UAAU,CACb,CAAC;;EAED;EACAzB,SAAS,CAAC,MAAM;IACd0B,YAAY,CAACL,KAAK,CAAC;EACrB,CAAC,EAAE,CAACA,KAAK,CAAC,CAAC;;EAEX;EACA,MAAMU,gBAAgB,GAAGA,CAACI,GAAG,EAAEC,QAAQ,EAAEC,SAAS,KAAK;IACrD,OAAOF,GAAG,CAACG,GAAG,CAAEC,GAAG,IAAK;MACtB,IAAIA,GAAG,CAACP,EAAE,KAAKI,QAAQ,EAAE;QACvB;QACA,OAAO;UAAE,GAAGG,GAAG;UAAE,GAAGF;QAAU,CAAC;MACjC;MACA,OAAOE,GAAG;IACZ,CAAC,CAAC;EACJ,CAAC;;EAED;EACA,MAAMC,iBAAiB,GAAIC,YAAY,IAAK;IAC1C,MAAMC,KAAK,GAAGjB,UAAU,CAACkB,SAAS,CAAEJ,GAAG,IAAKA,GAAG,CAACP,EAAE,KAAKS,YAAY,CAACT,EAAE,CAAC;IAEvE,IAAIU,KAAK,KAAK,CAAC,CAAC,EAAE;MAChB,MAAME,QAAQ,GAAG,CACf,GAAGnB,UAAU,CAACoB,KAAK,CAAC,CAAC,EAAEH,KAAK,CAAC,EAC7B;QAAE,GAAGD;MAAa,CAAC,EACnB,GAAGhB,UAAU,CAACoB,KAAK,CAACH,KAAK,GAAG,CAAC,CAAC,CAC/B;MAEDhB,YAAY,CAACkB,QAAQ,CAAC;IACxB;EACF,CAAC;EAED,oBACE1C,OAAA,CAAAE,SAAA;IAAA0C,QAAA,eAEE5C,OAAA,CAACb,SAAS;MAAC0D,SAAS,EAAC,kBAAkB;MAAAD,QAAA,gBACrC5C,OAAA,CAACf,GAAG;QAAA2D,QAAA,gBACF5C,OAAA,CAACd,GAAG;UAAA0D,QAAA,eAEF5C,OAAA,CAACZ,SAAS;YACRoC,YAAY,EAAEQ,mBAAoB;YAClCX,IAAI,EAAEF;UAAM;YAAA2B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACF;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACV,CAAC,eACNjD,OAAA,CAACd,GAAG;UAACgE,KAAK,EAAErC,eAAgB;UAAA+B,QAAA,gBAC1B5C,OAAA;YAAA4C,QAAA,eAEE5C,OAAA,CAACX,MAAM;cAAC6D,KAAK,EAAE/C,YAAa;cAAAyC,QAAA,EAAC;YAAQ;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC1C,CAAC,eACPjD,OAAA;YAAA4C,QAAA,eAEE5C,OAAA,CAACV,eAAe;cACd6D,IAAI,EAAC,IAAI;cACTC,IAAI,EAAE7D,OAAQ;cACd2D,KAAK,EAAE;gBAAE1C,KAAK,EAAE;cAAU;YAAE;cAAAsC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC7B;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eAGNjD,OAAA,CAACR,qBAAqB;QAAC6B,IAAI,EAAEE;MAAW;QAAAuB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAwB,CAAC,eAGjEjD,OAAA,CAACP,uBAAuB;QACtB4B,IAAI,EAAEE,UAAW;QACjBC,YAAY,EAAEC,cAAe;QAC7Ba,iBAAiB,EAAEA;MAAkB;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACb,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClB;EAAC,gBACZ,CAAC;AAEP;AAAC/B,EAAA,CAtGQD,aAAa;EAAA,QAENvB,WAAW;AAAA;AAAA2D,EAAA,GAFlBpC,aAAa;AAwGtB,eAAeA,aAAa;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}